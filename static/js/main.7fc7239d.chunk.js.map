{"version":3,"sources":["navbar.js","TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","onClick","togglemode","TextAreaComp","useState","text","settext","style","color","value","onChange","event","target","placeholder","rows","newtext","toUpperCase","toLowerCase","replace","navigator","clipboard","writeText","length","split","filter","element","App","Setmode","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7fc7239d.chunk.js","sourcesContent":["const Navbar = (props) => {\r\n    return ( \r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">Features</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">Pricing</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link disabled\" href=\"/\"  aria-disabled=\"true\">Disabled</a>\r\n              </li>\r\n              <li>\r\n                  <button type=\"button\" className={`btn btn-${props.mode==='light'?'dark':'light'}`} onClick={props.togglemode}>Enabled Mode</button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\n \r\nexport default Navbar;","import React, {useState} from 'react'\r\n\r\nconst TextAreaComp = (props) => {\r\n\r\n    function UpperCase() {\r\n       var newtext=text.toUpperCase();\r\n       settext(newtext);\r\n    }\r\n    const  Lowercase= () => {\r\n        var newtext=text.toLowerCase();\r\n        settext(newtext);\r\n    } \r\n    const handleonchange  = (event) => {\r\n        settext(event.target.value);\r\n    }\r\n    // const  handleonkeypress= (event) => {\r\n\r\n\r\n    // }\r\n    const Copytext=() =>{\r\n        navigator.clipboard.writeText(text);\r\n    }\r\n    const Removetext= () => {\r\n        settext('');\r\n    }\r\n    const RemoveExtraSpaces=() =>{\r\n          var newtext;\r\n        newtext=text.replace(/\\s\\s+/g, ' ');\r\n        settext(newtext);\r\n    }\r\n\r\n    const [text,settext]= useState('');\r\n    return (  \r\n\r\n        <>\r\n            <div className=\"mb-3\">\r\n            <h1 className=\"my-5\" style={{color:props.mode==='light'?'black':'white'}}>Write the Text here...</h1>\r\n            <textarea className={`form-control bg-${props.mode==='dark'?'dark':'light'}`} style={{color:props.mode==='light'?'black':'white'}} value={text} onChange={handleonchange}  id=\"exampleFormControlTextarea1\" placeholder='Write here' rows=\"10\"></textarea>\r\n            </div>\r\n            <button type=\"button\" onClick={UpperCase}  className=\"btn btn-primary\">To Upper Case</button>\r\n            <button type=\"button\" onClick={Lowercase}  className=\"btn btn-primary mx-4 my-md-3 my-sm-3 my-3\">To Lower Case</button>\r\n            <button type=\"button\" onClick={RemoveExtraSpaces}  className=\"btn btn-primary\">Remove Extra Spaces</button>\r\n            <button type=\"button\" onClick={Removetext}  className=\"btn btn-primary mx-4\">Clear All</button>\r\n            <button type=\"button\" onClick={Copytext}  className=\"btn btn-primary mx-4 my-md-3 my-sm-3 my-3\">Copy The Text</button>\r\n            <div style={{color:props.mode==='light'?'black':'white'}}>\r\n            <h2 className=\"my-4 text-right\">Text summary</h2>\r\n            <p>Characters (Including Spaces) {(text.length)}</p>\r\n            <p>Characters (without Spaces) {((1+text.length)-text.split(' ').length)}</p>\r\n            <p>Tottal word is {text.split(\" \").filter((element)=>{return element.length!==0}).length}</p>\r\n            <p>Tottal Paragraph is {(text.split('.').length-1)}</p>\r\n            <h1>Review</h1>\r\n            <p>{text}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default TextAreaComp;","import { useState } from 'react';\nimport './App.css';\nimport Navbar from './navbar';\nimport TextAreaComp from './TextForm';\n\n\nfunction App() {\n// const [mode,Setmode]=useState(\n//   color: green,\n//   backgroundColor:black\n// )\nconst [mode,Setmode] = useState('light');\nconst togglemode=()=>{\n  if(mode==='light')\n  {\n    Setmode('dark');\n    document.body.style.backgroundColor='black';\n    }\n  else\n  {\n    Setmode('light');\n    document.body.style.backgroundColor='white';\n    \n  }\n}\n  return (\n    <div className=\"App\">\n      <nav className=\"Navbar\">\n           <Navbar mode={mode} togglemode={togglemode}/>\n      </nav>\n      <div className=\"container\">\n          <TextAreaComp mode={mode} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}